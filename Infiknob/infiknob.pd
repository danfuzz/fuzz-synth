#N canvas 1030 236 1373 1013 12;
#X text 896 10 Copyright 2019 Dan Bornstein <danfuzz@milk.com>. Licensed
AS IS and WITHOUT WARRANTY under the Apache License \, Version 2.0.
Details: <http://www.apache.org/licenses/LICENSE-2.0>, f 65;
#X obj 1252 194 float \$1;
#X obj 1196 249 float \$2;
#X obj 1141 311 float \$3;
#X obj 1141 336 value quant\$0;
#X obj 1196 274 value max\$0;
#X obj 1252 219 value min\$0;
#X obj 1031 112 loadbang;
#X text 982 82 Contructor arguments / initial values;
#X obj 1121 543 expr (min\$0 + max\$0) / 2;
#X obj 1115 630 value frozen\$0;
#X obj 316 228 inlet;
#X obj 1028 510 receive \$0-reset;
#X obj 1086 369 send \$0-reset;
#X obj 207 917 expr max(min($f1 \, max\$0) \, min\$0);
#X obj 207 976 outlet;
#X obj 207 858 receive \$0-to-outlet;
#X obj 165 443 trigger bang bang;
#X obj 281 475 send \$0-reset;
#X obj 207 947 change;
#X text 459 891 Round to the quantization increment.;
#X text 458 918 Clip to the limits.;
#X obj 207 888 expr rint($f1 / quant\$0) * quant\$0;
#X obj 1097 688 value midincs\$0;
#X text 715 666 Auto-increment section;
#X obj 557 475 send \$0-reset;
#X obj 399 442 trigger bang float bang;
#N canvas 170 375 922 726 auto-increment 1;
#X obj 61 564 +;
#X obj 10 69 inlet;
#X text 8 34 Toggle auto-increment (`0` to turn it off \, `1` to turn
it on)., f 32;
#X obj 398 69 inlet;
#X obj 10 175 select 0;
#X msg 10 214 stop;
#X msg 133 214 bang;
#X text 394 5 Amount of auto-increment. Float in range [-1..1] to indicate
how far from center the control is and in which direction. The further
away from center \, the faster the rate of change., f 49;
#X obj 61 648 outlet;
#X obj 333 648 outlet;
#X text 46 672 Value to send to the main outlet.;
#X text 318 673 New center value.;
#X obj 10 138 change;
#X text 109 106 Ensure boolean...;
#X obj 61 251 metro 50;
#X obj 10 105 expr $f1 != 0;
#X obj 366 364 float;
#X obj 61 290 trigger bang bang;
#X text 380 401 The first expression here calculates the new center
value. The second one emits the offset from center based on the current
direction of travel. These flow into an adder below \, to produce the
final value output.;
#X obj 61 401 expr max(min(center\$0 + $f2 \, max\$0) \, min\$0) \;
if($f2 < 0 \, -1 \, 1) * midincs\$0 / 2 * quant\$0;
#X obj 531 538 expr ((max\$0 - min\$0) / quant\$0) / 4;
#X obj 531 570 value auto_max\$0;
#X obj 398 109 expr copysign(quant\$0 * pow(auto_max\$0 \, abs($f1)
+ 0.1) \, $f1), f 63;
#X obj 133 251 send \$0-auto-reset;
#X obj 531 502 receive \$0-auto-reset;
#X text 528 594 Set the maximum rate of auto-increment (that is \,
the rate at the extremes of the input controls) \, such that it should
take about 4 seconds (`/ 4`) to sweep the output from one end of the
range to the other., f 51;
#X obj 398 166 expr $f1 / 20;
#X text 443 130 Increment per second \, set up as exponentially increasing
in magnitude as the control moves away from center., f 57;
#X text 442 191 Convert to increment per 50msec (1/20 sec) \, and hold
it in the `float` below for use during each bang of the `metro`.;
#X text 62 138 ...and only touch the `metro` when it changes \, to
avoid spurious extra `bang`s., f 41;
#X connect 0 0 8 0;
#X connect 1 0 15 0;
#X connect 3 0 22 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 14 0;
#X connect 6 0 14 0;
#X connect 6 0 23 0;
#X connect 12 0 4 0;
#X connect 14 0 17 0;
#X connect 15 0 12 0;
#X connect 16 0 19 1;
#X connect 17 0 19 0;
#X connect 17 1 16 0;
#X connect 19 0 0 0;
#X connect 19 0 9 0;
#X connect 19 1 0 1;
#X connect 20 0 21 0;
#X connect 22 0 26 0;
#X connect 24 0 20 0;
#X connect 26 0 16 1;
#X restore 674 763 pd auto-increment;
#X obj 674 827 send \$0-to-outlet;
#X obj 790 801 value center\$0;
#X obj 790 724 receive \$0-auto-amt;
#X text 13 8 "Infinite" range knob. See `README.md` for details.,
f 52;
#X obj 478 500 value center\$0;
#X obj 1121 570 value center\$0;
#X text 14 31 Constructor arguments (in order): `min\$0` -- minimum
value in the output range \; `max\$0` -- maximum value in the output
range \; `quant\$0` -- increment quantum (smallest possible increment
_and_ the quantized alignment), f 82;
#X text 13 191 Constants: `midincs\$0` -- The number of increments
(steps) in the center range of the control input., f 82;
#N canvas 1475 350 1006 730 control-input 0;
#X obj 290 32 inlet;
#X text 339 31 Input control value;
#X obj 55 646 outlet;
#X obj 290 87 moses -0.5;
#X obj 424 148 moses 0.50001;
#X obj 345 449 expr center\$0 + ($f1 * quant\$0);
#X obj 345 352 trigger float bang;
#X obj 57 170 trigger bang float;
#X obj 692 213 trigger bang float;
#X obj 345 419 expr rint($f1 * midincs\$0);
#X obj 815 267 expr min(1 \, ($f1 - 0.5) * 2 + 0.01), f 20;
#X obj 180 225 expr max(-1 \, ($f1 + 0.5) * 2 - 0.01), f 22;
#X obj 318 646 outlet;
#X text 316 672 Toggle (boolean) for auto-increment;
#X text 618 670 Auto-increment amount;
#X obj 617 643 outlet;
#X obj 617 601 receive \$0-ctl-auto-amt;
#X obj 815 310 send \$0-ctl-auto-amt;
#X obj 180 268 send \$0-ctl-auto-amt;
#X msg 297 597 1;
#X msg 336 597 0;
#X obj 297 541 receive \$0-ctl-auto-on;
#X obj 336 568 receive \$0-ctl-auto-off;
#X text 52 672 Value to send to the main outlet;
#X obj 692 344 send \$0-ctl-auto-on;
#X obj 57 301 send \$0-ctl-auto-on;
#X obj 468 382 send \$0-ctl-auto-off;
#X text 12 99 Lower input range: auto-decrement.;
#X text 611 174 Upper input range: auto-increment.;
#X text 541 413 Convert control value to number of quanta up/down from
the center value., f 41;
#X text 396 232 Middle input range: quantized absolute control around
current center value., f 38;
#X connect 0 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 4 0;
#X connect 4 0 6 0;
#X connect 4 1 8 0;
#X connect 5 0 2 0;
#X connect 6 0 9 0;
#X connect 6 1 26 0;
#X connect 7 0 25 0;
#X connect 7 1 11 0;
#X connect 8 0 24 0;
#X connect 8 1 10 0;
#X connect 9 0 5 0;
#X connect 10 0 17 0;
#X connect 11 0 18 0;
#X connect 16 0 15 0;
#X connect 19 0 12 0;
#X connect 20 0 12 0;
#X connect 21 0 19 0;
#X connect 22 0 20 0;
#X restore 674 519 pd control-input;
#X obj 674 618 send \$0-to-outlet;
#X obj 728 589 send \$0-auto-toggle;
#X obj 674 692 receive \$0-auto-toggle;
#X obj 783 561 send \$0-auto-amt;
#N canvas 1172 526 763 681 freeze-handler 0;
#X obj 28 140 inlet;
#X obj 181 139 inlet;
#X text 27 113 Input control value;
#X text 178 113 Boolean: currently frozen?;
#X obj 297 586 outlet;
#X obj 89 202 pack 0 0;
#X text 498 113 Value to output if still frozen;
#X obj 500 140 inlet;
#X text 295 611 New frozen flag;
#X obj 69 584 outlet;
#X obj 468 585 outlet;
#X obj 68 547 float;
#X msg 40 495 bang;
#X text 63 609 Input control to pass along if unfrozen, f 23;
#X msg 443 489 bang;
#X obj 468 549 float;
#X obj 89 384 select 0;
#X text 462 614 Value to send to main output if still frozen., f 32
;
#X text 13 9 This sub-object handles the work of keeping the control
"frozen" until the input passes into / near the center of the range
\, at which point it becomes unfrozen. This sub-object is "pure" (doesn't
use or store variables) \; instead its use site arranges for the appropriate
state update.;
#X obj 89 246 expr $f2 && (($f1 < -0.1) || ($f1 > 0.1));
#X connect 0 0 5 0;
#X connect 0 0 11 1;
#X connect 1 0 5 1;
#X connect 5 0 19 0;
#X connect 7 0 15 1;
#X connect 11 0 9 0;
#X connect 12 0 11 0;
#X connect 14 0 15 0;
#X connect 15 0 10 0;
#X connect 16 0 12 0;
#X connect 16 1 14 0;
#X connect 19 0 4 0;
#X connect 19 0 16 0;
#X restore 674 426 pd freeze-handler;
#X obj 710 379 value frozen\$0;
#X obj 732 480 value frozen\$0;
#X obj 631 336 trigger float bang bang;
#X obj 828 379 value center\$0;
#X obj 790 457 send \$0-to-outlet;
#X msg 1074 717 0;
#X obj 1074 745 send \$0-auto-toggle;
#X msg 1115 603 1;
#X msg 1097 661 50;
#X obj 367 639 expr center\$0;
#X obj 367 671 send \$0-to-outlet;
#X obj 316 272 route bang reset set;
#X obj 45 856 receive \$0-reoutput;
#X msg 45 889 bang;
#X obj 47 350 send \$0-reoutput;
#X text 13 99 Local variables: `center\$0` -- current center of the
control range \; `frozen\$0` -- boolean indicating whether the control
is "frozen" (starts frozen upon initialization and becomes unfrozen
once the input control is moved to near the center of its range) \;
`inclimit\$0` and `inclimitmax\$0` (used in the auto-increment sub-object)
-- limits on the rate of change of the output., f 82;
#X obj 1031 155 trigger bang bang bang bang bang;
#X obj 1031 405 expr center\$0;
#X obj 1031 437 send \$0-to-outlet;
#X connect 1 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 7 0 58 0;
#X connect 9 0 33 0;
#X connect 11 0 53 0;
#X connect 12 0 9 0;
#X connect 12 0 47 0;
#X connect 12 0 49 0;
#X connect 12 0 50 0;
#X connect 14 0 19 0;
#X connect 16 0 22 0;
#X connect 17 0 51 0;
#X connect 17 1 18 0;
#X connect 19 0 15 0;
#X connect 22 0 14 0;
#X connect 26 0 51 0;
#X connect 26 1 32 0;
#X connect 26 2 25 0;
#X connect 27 0 28 0;
#X connect 27 1 29 0;
#X connect 30 0 27 1;
#X connect 36 0 37 0;
#X connect 36 1 38 0;
#X connect 36 2 40 0;
#X connect 39 0 27 0;
#X connect 41 0 36 0;
#X connect 41 1 43 0;
#X connect 41 2 46 0;
#X connect 42 0 41 1;
#X connect 44 0 41 0;
#X connect 44 1 42 0;
#X connect 44 2 45 0;
#X connect 45 0 41 2;
#X connect 47 0 48 0;
#X connect 49 0 10 0;
#X connect 50 0 23 0;
#X connect 51 0 52 0;
#X connect 53 0 56 0;
#X connect 53 1 17 0;
#X connect 53 2 26 0;
#X connect 53 3 44 0;
#X connect 54 0 55 0;
#X connect 55 0 19 0;
#X connect 58 0 59 0;
#X connect 58 1 13 0;
#X connect 58 2 3 0;
#X connect 58 3 2 0;
#X connect 58 4 1 0;
#X connect 59 0 60 0;
