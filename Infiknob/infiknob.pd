#N canvas 338 23 1351 1130 12;
#X text 887 8 Copyright 2019 Dan Bornstein <danfuzz@milk.com>. Licensed
AS IS and WITHOUT WARRANTY under the Apache License \, Version 2.0.
Details: <http://www.apache.org/licenses/LICENSE-2.0>, f 65;
#X obj 1133 265 float \$1;
#X obj 1071 320 float \$2;
#X obj 1009 382 float \$3;
#X obj 1009 407 value quant\$0;
#X obj 1071 345 value max\$0;
#X obj 1133 290 value min\$0;
#X obj 947 226 trigger bang bang bang bang;
#X obj 947 183 loadbang;
#X text 898 153 Contructor arguments / initial values;
#X obj 1124 555 expr (min\$0 + max\$0) / 2;
#X obj 1082 623 float 1;
#X obj 1082 662 value frozen\$0;
#X obj 546 503 select 0;
#X obj 208 232 inlet;
#X obj 1055 492 receive \$0-reset;
#X obj 947 440 send \$0-reset;
#X obj 546 542 expr input\$0;
#X obj 547 361 trigger bang float;
#X obj 670 395 value input\$0;
#X obj 546 430 expr frozen\$0 = frozen\$0 && ((input\$0 < -0.1) ||
(input\$0 > 0.1)), f 34;
#X obj 36 1003 expr max(min($f1 \, max\$0) \, min\$0);
#X obj 36 1062 outlet;
#X text 617 504 Only adjusts value when unfrozen.;
#X obj 36 944 receive \$0-to-outlet;
#X obj 25 404 trigger bang bang;
#X obj 25 485 send \$0-output-center;
#X obj 35 826 receive \$0-output-center;
#X obj 35 862 expr center\$0;
#X obj 35 897 send \$0-to-outlet;
#X obj 668 541 send \$0-output-center;
#X obj 141 446 send \$0-reset;
#X obj 36 1033 change;
#X text 288 977 Round to the quantization increment.;
#X text 287 1004 Clip to the limits.;
#X obj 36 974 expr rint($f1 / quant\$0) * quant\$0;
#X obj 1057 709 float 50;
#X obj 1057 759 value midincs\$0;
#X obj 208 276 route reset set;
#X text 611 736 Auto-increment section;
#X obj 417 436 send \$0-reset;
#X obj 259 403 trigger bang float bang;
#X obj 259 487 send \$0-output-center;
#N canvas 1285 203 1006 841 auto-increment 0;
#X obj 124 315 metro 50;
#X text 573 192 Convert to increment per 50msec (1/20 sec).;
#X obj 456 191 expr $f1 / 20;
#X text 677 136 Increment per second \, set up as exponentially increasing
in magnitude as the control moves away from center., f 39;
#X obj 124 446 +;
#X obj 456 140 expr copysign(pow((max\$0 - min\$0) / 5 \, abs($f1))
\, $f1), f 30;
#X obj 98 69 inlet;
#X text 26 33 Toggle auto-increment (`0` to turn it off \, `1` to turn
it on)., f 32;
#X obj 456 96 inlet;
#X obj 98 134 select 0;
#X msg 98 181 stop;
#X msg 151 182 bang;
#X text 324 29 Amount of auto-increment. Float in range [-1..1] to
indicate how far from center the control is and in which direction.
The further away from center \, the faster the rate of change., f
49;
#X obj 127 594 outlet;
#X obj 419 599 outlet;
#X text 109 618 Value to send to the main outlet.;
#X text 404 624 New center value.;
#X obj 124 347 expr max(min(center\$0 + $f2 \, max\$0) \, min\$0) \;
if($f2 < 0 \, -1 \, 1) * midincs\$0 / 2 * quant\$0, f 47;
#X text 467 337 The first expression here calculates the new center
value. The second one emits the offset from center based on the current
direction of travel. This flows into an adder below \, to produce the
final value output.;
#X connect 0 0 17 0;
#X connect 2 0 17 1;
#X connect 4 0 13 0;
#X connect 5 0 2 0;
#X connect 6 0 9 0;
#X connect 8 0 5 0;
#X connect 9 0 10 0;
#X connect 9 1 11 0;
#X connect 10 0 0 0;
#X connect 11 0 0 0;
#X connect 17 0 4 0;
#X connect 17 0 14 0;
#X connect 17 1 4 1;
#X restore 570 833 pd auto-increment;
#X obj 569 897 send \$0-to-outlet;
#X obj 686 871 value center\$0;
#X text 702 828 See comments in this sub-object for more details.,
f 28;
#X obj 686 794 receive \$0-auto-amt;
#X text 13 8 "Infinite" range knob. See `README.md` for details.,
f 52;
#X obj 338 461 value center\$0;
#X obj 1124 589 value center\$0;
#X text 14 28 Constructor arguments (in order): `min\$0` -- minimum
value in the output range \; `max\$0` -- maximum value in the output
range \; `quant\$0` -- increment quantum (smallest possible increment
_and_ the quantized alignment), f 82;
#X text 12 179 Constants: `midincs\$0` -- The number of increments
(steps) in the center range of the control input., f 82;
#X text 13 100 Local variables: `center\$0` -- current center of the
control range \; `frozen\$0` -- boolean indicating whether the control
is "frozen" (starts frozen upon initialization and becomes unfrozen
once the input control is moved to near the center of its range) \;
`input\$0` -- input control value \, when in the middle of processing
same, f 82;
#N canvas 1475 350 1006 730 control-input 0;
#X obj 290 32 inlet;
#X text 339 31 Input control value;
#X obj 55 646 outlet;
#X obj 290 87 moses -0.5;
#X obj 424 148 moses 0.50001;
#X obj 345 449 expr center\$0 + ($f1 * quant\$0);
#X obj 345 352 trigger float bang;
#X obj 57 170 trigger bang float;
#X obj 692 213 trigger bang float;
#X obj 345 419 expr rint($f1 * midincs\$0);
#X obj 815 267 expr min(1 \, ($f1 - 0.5) * 2 + 0.01), f 20;
#X obj 180 225 expr max(-1 \, ($f1 + 0.5) * 2 - 0.01), f 22;
#X obj 318 646 outlet;
#X text 316 672 Toggle (boolean) for auto-increment;
#X text 618 670 Auto-increment amount;
#X obj 617 643 outlet;
#X obj 617 601 receive \$0-ctl-auto-amt;
#X obj 815 310 send \$0-ctl-auto-amt;
#X obj 180 268 send \$0-ctl-auto-amt;
#X msg 297 597 1;
#X msg 336 597 0;
#X obj 297 541 receive \$0-ctl-auto-on;
#X obj 336 568 receive \$0-ctl-auto-off;
#X text 52 672 Value to send to the main outlet;
#X obj 692 344 send \$0-ctl-auto-on;
#X obj 57 301 send \$0-ctl-auto-on;
#X obj 468 382 send \$0-ctl-auto-off;
#X text 12 99 Lower input range: auto-decrement.;
#X text 611 174 Upper input range: auto-increment.;
#X text 541 413 Convert control value to number of quanta up/down from
the center value., f 41;
#X text 396 232 Middle input range: quantized absolute control around
current center value., f 38;
#X connect 0 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 4 0;
#X connect 4 0 6 0;
#X connect 4 1 8 0;
#X connect 5 0 2 0;
#X connect 6 0 9 0;
#X connect 6 1 26 0;
#X connect 7 0 25 0;
#X connect 7 1 11 0;
#X connect 8 0 24 0;
#X connect 8 1 10 0;
#X connect 9 0 5 0;
#X connect 10 0 17 0;
#X connect 11 0 18 0;
#X connect 16 0 15 0;
#X connect 19 0 12 0;
#X connect 20 0 12 0;
#X connect 21 0 19 0;
#X connect 22 0 20 0;
#X restore 546 596 pd control-input;
#X obj 546 695 send \$0-to-outlet;
#X obj 600 666 send \$0-auto-toggle;
#X obj 570 762 receive \$0-auto-toggle;
#X obj 655 638 send \$0-auto-amt;
#X connect 1 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 7 0 16 0;
#X connect 7 1 3 0;
#X connect 7 2 2 0;
#X connect 7 3 1 0;
#X connect 8 0 7 0;
#X connect 10 0 50 0;
#X connect 11 0 12 0;
#X connect 13 0 17 0;
#X connect 13 1 30 0;
#X connect 14 0 38 0;
#X connect 15 0 10 0;
#X connect 15 0 11 0;
#X connect 15 0 36 0;
#X connect 17 0 54 0;
#X connect 18 0 20 0;
#X connect 18 1 19 0;
#X connect 20 0 13 0;
#X connect 21 0 32 0;
#X connect 24 0 35 0;
#X connect 25 0 26 0;
#X connect 25 1 31 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 32 0 22 0;
#X connect 35 0 21 0;
#X connect 36 0 37 0;
#X connect 38 0 25 0;
#X connect 38 1 41 0;
#X connect 38 2 18 0;
#X connect 41 0 42 0;
#X connect 41 1 49 0;
#X connect 41 2 40 0;
#X connect 43 0 44 0;
#X connect 43 1 45 0;
#X connect 47 0 43 1;
#X connect 54 0 55 0;
#X connect 54 1 56 0;
#X connect 54 2 58 0;
#X connect 57 0 43 0;
