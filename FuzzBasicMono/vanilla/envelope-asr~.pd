#N canvas 557 44 1365 1085 12;
#X text 769 11 Copyright 2019 Dan Bornstein <danfuzz@milk.com>. Licensed
AS IS and WITHOUT WARRANTY under the Apache License \, Version 2.0.
Details: <http://www.apache.org/licenses/LICENSE-2.0>, f 65;
#X obj 285 133 inlet;
#X text 311 869 Instantaneous amplitude \, float in range [0..1].;
#X text 334 133 Message `on <velocity>` or `off <velocity>`. `<velocity>`
is float in range [0..1].;
#X obj 879 120 loadbang;
#X obj 879 223 send \$0-attack-rate;
#X obj 1027 223 send \$0-release-rate;
#X obj 1027 122 loadbang;
#X obj 285 177 route off on, f 14;
#X obj 501 342 receive \$0-attack-rate;
#X obj 448 381 pack 0 0;
#X text 518 383 Pair `[<target-value> \, <msec>]`.;
#X text 559 411 Initial `0` message to reset the line to zero \, then
a message to initiate the attack portion of the envelope., f 37;
#X obj 314 843 outlet~;
#X obj 251 355 receive \$0-release-rate;
#X obj 448 272 clip 0 1;
#X text 13 61 Simple envelope \, which is just an attack-sustain-release
with fixed slopes. `on` velocity becomes the full amplitude value \,
and `off` velocity is ignored.;
#X obj 156 389 expr $f1 * $f2;
#X msg 156 422 0 \$1;
#X obj 145 713 send~ \$0-to-snapshot;
#X obj 156 270 bang;
#X obj 156 342 snapshot~;
#X obj 182 304 receive~ \$0-to-snapshot;
#X obj 314 616 line~ 0;
#X text 937 80 Fixed Parameters;
#X floatatom 879 186 6 0 10000 0 - - -;
#X floatatom 1027 186 6 0 10000 0 - - -;
#X msg 448 415 0 \, \$1 \$2, f 13;
#X text 5 733 The `release-rate` value is a rate not an absolute number
of msec (see comment at definition site) \, so snapshot the amplitude
at the moment of release initiation \, and use it to calculate the
correct ramp-down time., f 41;
#X obj 879 151 float 50;
#X obj 1027 153 float 1000;
#X obj 933 440 loadbang;
#X obj 570 621 receive \$0-transfer-exponent;
#X obj 933 563 send \$0-transfer-exponent;
#X obj 314 672 expr~ (pow($v2 \, $v1) - 1) / ($v2 - 1);
#N canvas 191 390 947 683 graph-transfer-function 1;
#N canvas 0 23 450 278 (subpatch) 0;
#X array \$0-graph 250 float 1;
#A 0 0 0.000130965 0.000264606 0.000400978 0.000540135 0.000682136
0.000827038 0.0009749 0.00112578 0.00127975 0.00143686 0.00159718 0.00176078
0.00192772 0.00209807 0.0022719 0.00244928 0.00263029 0.002815 0.00300347
0.0031958 0.00339206 0.00359233 0.00379669 0.00400523 0.00421802 0.00443516
0.00465675 0.00488285 0.00511358 0.00534902 0.00558927 0.00583443 0.0060846
0.00633988 0.00660037 0.00686619 0.00713744 0.00741423 0.00769667 0.00798489
0.00827899 0.00857911 0.00888535 0.00919785 0.00951674 0.00984214 0.0101742
0.010513 0.0108588 0.0112116 0.0115716 0.011939 0.0123139 0.0126965
0.0130868 0.0134852 0.0138916 0.0143064 0.0147297 0.0151616 0.0156023
0.0160521 0.016511 0.0169793 0.0174572 0.0179448 0.0184424 0.0189501
0.0194683 0.019997 0.0205365 0.0210871 0.0216489 0.0222221 0.0228071
0.0234041 0.0240132 0.0246348 0.0252691 0.0259163 0.0265767 0.0272507
0.0279384 0.0286402 0.0293563 0.0300871 0.0308327 0.0315936 0.0323701
0.0331624 0.0339709 0.0347959 0.0356378 0.0364969 0.0373735 0.0382681
0.0391809 0.0401124 0.0410629 0.0420328 0.0430225 0.0440325 0.0450631
0.0461147 0.0471878 0.0482829 0.0494003 0.0505406 0.0517042 0.0528915
0.0541031 0.0553394 0.056601 0.0578884 0.0592021 0.0605426 0.0619105
0.0633064 0.0647308 0.0661842 0.0676674 0.0691809 0.0707253 0.0723012
0.0739094 0.0755504 0.0772249 0.0789337 0.0806773 0.0824566 0.0842722
0.086125 0.0880155 0.0899448 0.0919134 0.0939222 0.0959721 0.0980639
0.100198 0.102376 0.104599 0.106867 0.109182 0.111543 0.113953 0.116412
0.118922 0.121482 0.124095 0.126762 0.129482 0.132259 0.135092 0.137983
0.140933 0.143943 0.147015 0.15015 0.153349 0.156613 0.159943 0.163342
0.16681 0.170349 0.173961 0.177646 0.181406 0.185244 0.189159 0.193155
0.197232 0.201393 0.205638 0.209971 0.214392 0.218903 0.223506 0.228204
0.232997 0.237888 0.24288 0.247973 0.25317 0.258474 0.263885 0.269408
0.275043 0.280793 0.286661 0.292649 0.298759 0.304994 0.311356 0.317849
0.324473 0.331234 0.338132 0.345171 0.352355 0.359685 0.367164 0.374797
0.382585 0.390533 0.398643 0.406918 0.415363 0.42398 0.432774 0.441746
0.450903 0.460246 0.46978 0.479509 0.489437 0.499568 0.509905 0.520454
0.531218 0.542203 0.553412 0.564849 0.576521 0.588431 0.600584 0.612985
0.62564 0.638553 0.651731 0.665177 0.678898 0.6929 0.707187 0.721767
0.736644 0.751825 0.767317 0.783125 0.799256 0.815716 0.832513 0.849653
0.867144 0.884991 0.903203 0.921788 0.940751 0.960103 0.97985;
#X coords 0 1 250 0 250 250 1 0 0;
#X restore 42 89 graph;
#X obj 519 228 value idx\$0;
#X msg 519 186 0;
#X obj 353 388 until;
#X obj 353 528 select 1;
#X obj 436 265 symbol \$0-graph;
#X obj 353 438 expr idx\$0 == size("$s2") \; idx\$0 = idx\$0 + 1 \;
idx\$0 \; idx\$0 / size("$s2"), f 29;
#X obj 385 348 receive \$0-done;
#X obj 353 573 send \$0-done;
#X obj 686 583 receive \$0-name;
#X obj 553 391 receive \$0-name;
#X obj 436 306 send \$0-name;
#X text 565 438 This executes bottom-to-top \, because `expr` (like
most objects) produces outputs from right to left., f 28;
#X text 457 7 Copyright 2019 Dan Bornstein <danfuzz@milk.com>. Licensed
AS IS and WITHOUT WARRANTY under the Apache License \, Version 2.0.
Details: <http://www.apache.org/licenses/LICENSE-2.0>, f 65;
#X obj 353 85 inlet;
#X text 401 87 Exponent of the transfer function.;
#X obj 602 192 send \$0-exponent;
#X obj 619 545 receive \$0-exponent;
#X obj 486 622 expr $s4[$i1] = (pow($f3 \, $f2) - 1) / ($f3 - 1),
f 29;
#X obj 353 148 trigger bang bang bang float, f 36;
#X text 40 31 Visualization of the amplitude transfer curve.;
#X connect 2 0 1 0;
#X connect 3 0 6 0;
#X connect 4 0 8 0;
#X connect 5 0 11 0;
#X connect 6 0 4 0;
#X connect 6 2 18 0;
#X connect 6 3 18 1;
#X connect 7 0 3 1;
#X connect 9 0 18 3;
#X connect 10 0 6 1;
#X connect 14 0 19 0;
#X connect 17 0 18 2;
#X connect 19 0 3 0;
#X connect 19 1 5 0;
#X connect 19 2 2 0;
#X connect 19 3 16 0;
#X coords 0 0 1 1 250 100 0;
#X restore 889 683 pd graph-transfer-function;
#X obj 933 521 nbx 6 14 1.1 10000 1 0 empty empty empty 0 -8 0 12 -262144
-1 -1 157.003 256;
#X text 843 249 These are slopes represented as the number of msec
to go from 0 to 1 (or back). Notably \, these are _not_ a fixed number
of msec to perform an attack or release: that would make all attacks
and releases take the same amount of time per se (despite velocity
differences) and also make a release-from-mid-attack take the wrong
amount of time (assuming the usual desire to maintain a consistent
slope)., f 53;
#X obj 933 482 float 100;
#X connect 1 0 8 0;
#X connect 4 0 29 0;
#X connect 7 0 30 0;
#X connect 8 0 20 0;
#X connect 8 1 15 0;
#X connect 9 0 10 1;
#X connect 10 0 27 0;
#X connect 14 0 17 1;
#X connect 15 0 10 0;
#X connect 17 0 18 0;
#X connect 18 0 23 0;
#X connect 20 0 21 0;
#X connect 21 0 17 0;
#X connect 22 0 21 0;
#X connect 23 0 19 0;
#X connect 23 0 34 0;
#X connect 25 0 5 0;
#X connect 26 0 6 0;
#X connect 27 0 23 0;
#X connect 29 0 25 0;
#X connect 30 0 26 0;
#X connect 31 0 38 0;
#X connect 32 0 34 1;
#X connect 34 0 13 0;
#X connect 36 0 33 0;
#X connect 36 0 35 0;
#X connect 38 0 36 0;
